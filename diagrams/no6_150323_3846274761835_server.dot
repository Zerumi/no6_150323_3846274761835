digraph "src" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

AddCommand                                 [shape = record, pos = "34.234,25.306!"   , label = "{ AddCommand | + AddCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
AddIfMaxCommand                            [shape = record, pos = "17.845,25.306!"   , label = "{ AddIfMaxCommand | + AddIfMaxCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
AddIfMinCommand                            [shape = record, pos = "26.040,25.306!"   , label = "{ AddIfMinCommand | + AddIfMinCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
"ArgumentCommandClientRequestWorker<T, Y>" [shape = record, pos = "23.363,17.611!"   , label = "{ ArgumentCommandClientRequestWorker\<T, Y\> | + ArgumentCommandClientRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
"ArgumentConsumer<T>"                      [shape = record, pos = "25.280,28.826!"   , label = "{ \<\<interface\>\>\nArgumentConsumer\<T\> |  obj : T\l }"];
BaseCommand                                [shape = record, pos = "12.515,33.000!"   , label = "{ \<\<interface\>\>\nBaseCommand | + execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
BaseReader                                 [shape = record, pos = "-1.714,20.722!"   , label = "{ \<\<interface\>\>\nBaseReader | + readFromFile(String) : LinkedHashMap\<String[], String\>\l }"];
BaseRequestWorker                          [shape = record, pos = "38.252,17.611!"   , label = "{ BaseRequestWorker | + BaseRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
BaseWriter                                 [shape = record, pos = "-2.931,36.514!"   , label = "{ \<\<interface\>\>\nBaseWriter | + writeToFile(String, LinkedHashMap\<String[], String\>) : void\l }"];
CallerBack                                 [shape = record, pos = "59.245,21.597!"   , label = "{ CallerBack | + CallerBack(InetAddress, int) : \l|+ hashCode() : int\l + toString() : String\l + equals(Object) : boolean\l| address : InetAddress\l  port : int\l }"];
ClearCommand                               [shape = record, pos = "36.290,29.535!"   , label = "{ ClearCommand | + ClearCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
ClientHandler                              [shape = record, pos = "66.262,15.278!"   , label = "{ ClientHandler | ~ availability : boolean\l|+ actionPerformed(ActionEvent) : void\l + restartTimer() : void\l + approveCallerBack(CallerBack) : void\l + allowNewCallerBack() : void\l| instance : ClientHandler\l  availability : boolean\l }"];
"CollectionHandler<T, E>"                  [shape = record, pos = "0.786,9.722!"     , label = "{ \<\<interface\>\>\nCollectionHandler\<T, E\> | + getMax(Comparator\<E\>) : E\l + clearCollection() : void\l + sort() : void\l + addElementToCollection(E) : void\l + validateElements() : void\l + getMin(Comparator\<E\>) : E\l| lastElement : E\l  sorted : T\l  firstOrNew : E\l  collection : T\l  initDate : Date\l }"];
CommandClientRequestWorker                 [shape = record, pos = "33.905,17.611!"   , label = "{ CommandClientRequestWorker | + CommandClientRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
CommandConfigureRequestWorker              [shape = record, pos = "42.585,17.611!"   , label = "{ CommandConfigureRequestWorker | + CommandConfigureRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
CommandConfigureResponseSender             [shape = record, pos = "19.134,9.722!"    , label = "{ CommandConfigureResponseSender | + CommandConfigureResponseSender() : \l|+ sendResponse(CommandDescriptionsResponse, ServerConnection, CallerBack) : void\l }"];
CommandExporter                            [shape = record, pos = "33.620,9.722!"    , label = "{ CommandExporter | + CommandExporter() : \l| commandsToExport : ArrayList\<CommandDescription\>\l }"];
CommandManager                             [shape = record, pos = "22.793,21.451!"   , label = "{ CommandManager | + CommandManager() : \l|~ commands : LinkedHashMap\<String, BaseCommand\>\l|+ executeCommand(CommandClientRequest, CallerBack, ServerConnection) : void\l + fromDescription(CommandDescription) : BaseCommand\l| commands : LinkedHashMap\<String, BaseCommand\>\l }"];
CommandResponseSender                      [shape = record, pos = "11.606,9.722!"    , label = "{ CommandResponseSender | + CommandResponseSender() : \l|+ sendResponse(CommandStatusResponse, ServerConnection, CallerBack) : void\l }"];
CountGreaterThanDistanceCommand            [shape = record, pos = "44.484,29.701!"   , label = "{ CountGreaterThanDistanceCommand | + CountGreaterThanDistanceCommand() : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
DatagramServerConnection                   [shape = record, pos = "47.377,17.590!"   , label = "{ DatagramServerConnection | + sendData(byte[], InetAddress, int) : void\l + listenAndGetData() : StatusRequest\l }"];
DatagramServerConnectionFactory            [shape = record, pos = "49.290,14.424!"   , label = "{ DatagramServerConnectionFactory | + DatagramServerConnectionFactory() : \l|+ initializeServer(int) : ServerConnection\l }"];
DateEditor                                 [shape = record, pos = "4.856,9.722!"     , label = "{ DateEditor | + DateEditor() : \l|+ supportsCustomEditor() : boolean\l + paintValue(Graphics, Rectangle) : void\l + addPropertyChangeListener(PropertyChangeListener) : void\l + removePropertyChangeListener(PropertyChangeListener) : void\l| asText : String\l  customEditor : Component\l  javaInitializationString : String\l  paintable : boolean\l  value : Object\l  tags : String[]\l }"];
ExecuteScriptCommand                       [shape = record, pos = "40.387,29.889!"   , label = "{ ExecuteScriptCommand | + ExecuteScriptCommand() : \l|~ response : CommandStatusResponse\l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
ExitCommand                                [shape = record, pos = "8.682,24.972!"    , label = "{ ExitCommand | + ExitCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
HelpCommand                                [shape = record, pos = "13.748,24.972!"   , label = "{ HelpCommand | + HelpCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
InfoCommand                                [shape = record, pos = "57.929,29.535!"   , label = "{ InfoCommand | + InfoCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
InvalidRequestException                    [shape = record, pos = "39.550,9.722!"    , label = "{ InvalidRequestException | + InvalidRequestException(String) : \l }"];
"Loader<T, E>"                             [shape = record, pos = "-1.741,14.757!"   , label = "{ Loader\<T, E\> | + Loader(Class\<T\>, Class\<E\>) : \l|+ loadFromXMLbyEnvKey(String) : T\l + setupConverter(Class\<?\>, Class\<PropertyEditor\>) : void\l + loadFromFile(String, BaseReader) : T\l }"];
Main                                       [shape = record, pos = "43.615,11.597!"   , label = "{ Main | + Main() : \l|+ main(String[]) : void\l }"];
MinByCreationDateCommand                   [shape = record, pos = "50.655,24.972!"   , label = "{ MinByCreationDateCommand | + MinByCreationDateCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
NotAvailableException                      [shape = record, pos = "65.280,17.611!"   , label = "{ NotAvailableException | + NotAvailableException(CallerBack) : \l| deniedClient : CallerBack\l }"];
PrintFieldDistanceAscendingCommand         [shape = record, pos = "6.078,29.535!"    , label = "{ PrintFieldDistanceAscendingCommand | + PrintFieldDistanceAscendingCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
RemoveByIdCommand                          [shape = record, pos = "53.832,29.701!"   , label = "{ RemoveByIdCommand | + RemoveByIdCommand() : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
RemoveGreaterCommand                       [shape = record, pos = "21.943,25.306!"   , label = "{ RemoveGreaterCommand | + RemoveGreaterCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
RequestReader                              [shape = record, pos = "54.292,14.424!"   , label = "{ RequestReader | + RequestReader(InputStream) : \l|+ readObject() : BaseRequest\l }"];
RequestWorker                              [shape = record, pos = "39.118,20.722!"   , label = "{ \<\<interface\>\>\nRequestWorker | + workWithRequest(ServerRequest) : void\l }"];
RequestWorkerManager                       [shape = record, pos = "39.557,14.424!"   , label = "{ RequestWorkerManager | + RequestWorkerManager() : \l|+ workWithRequest(ServerRequest) : void\l }"];
ResponseSender                             [shape = record, pos = "26.523,9.722!"    , label = "{ ResponseSender | + ResponseSender() : \l|+ sendResponse(BaseResponse, ServerConnection, CallerBack) : void\l }"];
RouteComparator                            [shape = record, pos = "-2.464,8.222!"    , label = "{ RouteComparator | + RouteComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteCreationDateComparator                [shape = record, pos = "49.512,29.014!"   , label = "{ RouteCreationDateComparator | + RouteCreationDateComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteDistanceComparator                    [shape = record, pos = "17.016,29.014!"   , label = "{ RouteDistanceComparator | + RouteDistanceComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteIDHandler                             [shape = record, pos = "-2.931,3.278!"    , label = "{ RouteIDHandler | + RouteIDHandler() : \l| instance : RouteIDHandler\l  nextID : Long\l }"];
RoutesHandler                              [shape = record, pos = "0.167,4.778!"     , label = "{ RoutesHandler | + getMax(Comparator\<Route\>) : Route\l + addElementToCollection(Route) : void\l + validateElements() : void\l + clearCollection() : void\l + getMin(Comparator\<Route\>) : Route\l + sort() : void\l| sorted : HashSet\<Route\>\l  firstOrNew : Route\l  instance : RoutesHandler\l  collection : HashSet\<Route\>\l  initDate : Date\l  lastElement : Route\l }"];
SaveCommand                                [shape = record, pos = "1.981,29.535!"    , label = "{ SaveCommand | + SaveCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
"Saver<T, E>"                              [shape = record, pos = "-1.674,32.500!"   , label = "{ Saver\<T, E\> | + Saver(Class\<E\>) : \l|+ saveCollection(T, String) : void\l }"];
ServerConnection                           [shape = record, pos = "51.615,20.889!"   , label = "{ \<\<interface\>\>\nServerConnection | + sendData(byte[], InetAddress, int) : void\l + listenAndGetData() : StatusRequest\l }"];
ServerConnectionFactory                    [shape = record, pos = "51.724,17.424!"   , label = "{ \<\<interface\>\>\nServerConnectionFactory | + initializeServer(int) : ServerConnection\l }"];
ServerRequest                              [shape = record, pos = "55.918,17.944!"   , label = "{ ServerRequest | + ServerRequest(BaseRequest, CallerBack, ServerConnection) : \l| from : CallerBack\l  userRequest : BaseRequest\l  connection : ServerConnection\l }"];
ShowCommand                                [shape = record, pos = "11.693,29.535!"   , label = "{ ShowCommand | + ShowCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
StatusRequest                              [shape = record, pos = "62.168,17.944!"   , label = "{ StatusRequest | + StatusRequest() : \l| inputStream : InputStream\l  code : int\l  callerBack : CallerBack\l }"];
StatusRequestBuilder                       [shape = record, pos = "61.870,14.924!"   , label = "{ StatusRequestBuilder | + build() : StatusRequest\l + initialize() : StatusRequestBuilder\l| objectStream : InputStream\l  code : int\l  callerBack : CallerBack\l }"];
UnknownCommandException                    [shape = record, pos = "4.248,24.264!"    , label = "{ UnknownCommandException | + UnknownCommandException(String) : \l }"];
UnsupportedRequestException                [shape = record, pos = "29.516,17.424!"   , label = "{ UnsupportedRequestException | + UnsupportedRequestException(String) : \l }"];
UpdateCommand                              [shape = record, pos = "30.137,25.306!"   , label = "{ UpdateCommand | + UpdateCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
Wrapper                                    [shape = record, pos = "-2.813,29.014!"   , label = "{ Wrapper | + Wrapper() : \l|+ isWrapperType(Class\<?\>) : boolean\l }"];
XMLReader                                  [shape = record, pos = "-1.714,17.611!"   , label = "{ XMLReader | + XMLReader() : \l|+ readFromFile(String) : LinkedHashMap\<String[], String\>\l }"];
XMLWriter                                  [shape = record, pos = "-2.931,34.944!"   , label = "{ XMLWriter | + XMLWriter() : \l|+ writeToFile(String, LinkedHashMap\<String[], String\>) : void\l }"];

AddCommand                                 -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddCommand                                 -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMaxCommand                            -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMaxCommand                            -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMaxCommand                            -> RouteDistanceComparator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AddIfMinCommand                            -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMinCommand                            -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMinCommand                            -> RouteDistanceComparator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
"ArgumentCommandClientRequestWorker<T, Y>" -> CommandManager                             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
"ArgumentCommandClientRequestWorker<T, Y>" -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
BaseRequestWorker                          -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ClearCommand                               -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ClientHandler                              -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callerBack\n1"];
ClientHandler                              -> NotAvailableException                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandClientRequestWorker                 -> CommandManager                             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandClientRequestWorker                 -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CommandConfigureRequestWorker              -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CommandManager                             -> AddCommand                                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> AddIfMaxCommand                            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> AddIfMinCommand                            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> BaseCommand                                [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "commands\n*"];
CommandManager                             -> ClearCommand                               [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> CountGreaterThanDistanceCommand            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> ExecuteScriptCommand                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> ExitCommand                                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> HelpCommand                                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> InfoCommand                                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> MinByCreationDateCommand                   [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> PrintFieldDistanceAscendingCommand         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> RemoveByIdCommand                          [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> RemoveGreaterCommand                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> SaveCommand                                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> ShowCommand                                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> UnknownCommandException                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                             -> UpdateCommand                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CountGreaterThanDistanceCommand            -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
DatagramServerConnection                   -> CallerBack                                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DatagramServerConnection                   -> ServerConnection                           [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
DatagramServerConnectionFactory            -> DatagramServerConnection                   [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DatagramServerConnectionFactory            -> ServerConnectionFactory                    [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ExecuteScriptCommand                       -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ExitCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ExitCommand                                -> SaveCommand                                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
HelpCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
HelpCommand                                -> CommandManager                             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
InfoCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
"Loader<T, E>"                             -> XMLReader                                  [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> DatagramServerConnectionFactory            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> "Loader<T, E>"                             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> RequestReader                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> RequestWorkerManager                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> SaveCommand                                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> ServerRequest                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
MinByCreationDateCommand                   -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
MinByCreationDateCommand                   -> RouteCreationDateComparator                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
NotAvailableException                      -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "deniedClient\n1"];
PrintFieldDistanceAscendingCommand         -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveByIdCommand                          -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveGreaterCommand                       -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveGreaterCommand                       -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveGreaterCommand                       -> RouteDistanceComparator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RequestWorkerManager                       -> "ArgumentCommandClientRequestWorker<T, Y>" [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RequestWorkerManager                       -> BaseRequestWorker                          [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RequestWorkerManager                       -> CommandClientRequestWorker                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RequestWorkerManager                       -> CommandConfigureRequestWorker              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RequestWorkerManager                       -> RequestWorker                              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "workers\n*"];
RequestWorkerManager                       -> UnsupportedRequestException                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteIDHandler                             -> RouteComparator                            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RoutesHandler                              -> "CollectionHandler<T, E>"                  [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RoutesHandler                              -> RouteComparator                            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
SaveCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
SaveCommand                                -> "Saver<T, E>"                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
"Saver<T, E>"                              -> XMLWriter                                  [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
ServerRequest                              -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "from\n1"];
ServerRequest                              -> ServerConnection                           [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "connection\n1"];
ShowCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
StatusRequest                              -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callerBack\n1"];
StatusRequestBuilder                       -> StatusRequest                              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "result\n1"];
StatusRequestBuilder                       -> StatusRequest                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
UpdateCommand                              -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
UpdateCommand                              -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Wrapper                                    -> "Saver<T, E>"                              [color = "#820000", style = solid , arrowtail = odot    , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
XMLReader                                  -> BaseReader                                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
XMLWriter                                  -> BaseWriter                                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];

}
